REQUIREMENTS
The code should be written in ES6 as much as possible
Use the create-react-app generator to start your project.
Follow the instructions on this repo to setup the generator: create-react-app
Your app should have one HTML page to render your react-redux application
There should be 2 container components
There should be 5 stateless components
There should be 3 routes
The Application must make use of react-router and proper RESTful routing (should you choose to use react-router v3 please refer to the appropriate docs; docs for v4 can be found here)
Use Redux middleware to respond to and modify state change
Make use of async actions to send data to and receive data from a server
Your Rails API should handle the data persistence. You should be using fetch() within your actions to GET and POST data from your API - do not use jQuery methods.
Your client-side application should handle the display of data with minimal data manipulation
Your application should have some minimal styling: feel free to stick to a framework (like react-bootstrap), but if you want to write (additional) CSS yourself, go for it!

Database
	User - userid (id), name (string), games (array)
	Game - gameid (id), userid (id), solution (array), start (array), current_state (array), score (integer), moves (integer)

Database actions
	Create user
	Sign-in user
	Add/modify user information
	New game
	Save game
	Check solution
	Retrieve user games
	Retrieve high scores

Containers
	Game
	User

Components
	Starting board
	Current board
	Score
	High scores
	My games

Routes
	/
	/user=userid
	/game=gameid

Easy - 34
Medium - 31
Hard - 28

Base solution:

1,3,4,8,7,9,5,2,6
6,7,9,5,2,4,1,3,8
2,5,8,6,1,3,4,9,7
8,9,3,1,4,5,6,7,2
5,6,1,7,9,2,3,8,4
4,2,7,3,6,8,9,5,1
3,8,6,4,5,7,2,1,9
7,1,2,9,3,6,8,4,5
9,4,5,2,8,1,7,6,3

